// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module.EmailProxy.Infrastructure.EntityFrameworkCore;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Module.EmailProxy.Infrastructure.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(AliasContext))]
    [Migration("20190915165406_AddMailDomain")]
    partial class AddMailDomain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Module.EmailProxy.Domain.Alias", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("DomainId");

                    b.Property<string>("Recipient")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("Aliases");
                });

            modelBuilder.Entity("Module.EmailProxy.Domain.MailDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("Module.EmailProxy.Domain.Alias", b =>
                {
                    b.HasOne("Module.EmailProxy.Domain.MailDomain", "Domain")
                        .WithMany()
                        .HasForeignKey("DomainId");

                    b.OwnsOne("Module.EmailProxy.Domain.ActivationCriteria", "ActivationCriteria", b1 =>
                        {
                            b1.Property<Guid>("AliasId");

                            b1.Property<string>("ActivationCode");

                            b1.Property<DateTime>("Creation");

                            b1.Property<bool>("IsActivated");

                            b1.Property<bool>("IsSent");

                            b1.HasKey("AliasId");

                            b1.ToTable("Aliases");

                            b1.HasOne("Module.EmailProxy.Domain.Alias")
                                .WithOne("ActivationCriteria")
                                .HasForeignKey("Module.EmailProxy.Domain.ActivationCriteria", "AliasId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
